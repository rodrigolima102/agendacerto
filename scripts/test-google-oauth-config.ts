// Script para testar configura√ß√£o do Google OAuth
import 'dotenv/config';

console.log('üîç Verificando configura√ß√£o do Google OAuth...\n');

// Verificar vari√°veis de ambiente
const clientId = process.env.NEXT_PUBLIC_GOOGLE_CLIENT_ID;
const clientSecret = process.env.GOOGLE_CLIENT_SECRET;
const appUrl = process.env.NEXT_PUBLIC_APP_URL || 'http://localhost:8082';

console.log('üìã Vari√°veis de ambiente:');
console.log(`‚úì NEXT_PUBLIC_GOOGLE_CLIENT_ID: ${clientId ? '‚úÖ Configurado' : '‚ùå N√£o encontrado'}`);
console.log(`‚úì GOOGLE_CLIENT_SECRET: ${clientSecret ? '‚úÖ Configurado' : '‚ùå N√£o encontrado'}`);
console.log(`‚úì NEXT_PUBLIC_APP_URL: ${appUrl}\n`);

if (clientId) {
  console.log('üîë Client ID (primeiros 30 caracteres):');
  console.log(`   ${clientId.substring(0, 30)}...\n`);
}

if (clientSecret) {
  console.log('üîê Client Secret (formato):');
  console.log(`   ${clientSecret.substring(0, 10)}...${clientSecret.substring(clientSecret.length - 5)}\n`);
}

// Verificar formato do redirect URI
const redirectUri = `${appUrl}/api/auth/callback/google`;
console.log('üîó Redirect URI configurado:');
console.log(`   ${redirectUri}\n`);

// Verificar se todas as configura√ß√µes est√£o presentes
if (clientId && clientSecret) {
  console.log('‚úÖ Todas as configura√ß√µes est√£o presentes!\n');
  
  console.log('üìù Pr√≥ximos passos:');
  console.log('1. Verifique se o Redirect URI est√° configurado no Google Cloud Console');
  console.log('2. Certifique-se de que o Google Calendar API est√° habilitado');
  console.log('3. Adicione seu email aos "Test users" no OAuth Consent Screen');
  console.log('4. Reinicie o servidor: npm run dev');
  console.log('5. Teste a conex√£o com o Google Calendar no dashboard\n');
} else {
  console.log('‚ùå Configura√ß√£o incompleta!\n');
  
  console.log('üìù O que fazer:');
  console.log('1. Crie o arquivo .env.local na raiz do projeto');
  console.log('2. Copie o conte√∫do de env-template.txt');
  console.log('3. Reinicie o servidor: npm run dev\n');
}

// Teste de formato do Client ID
if (clientId && !clientId.includes('.apps.googleusercontent.com')) {
  console.log('‚ö†Ô∏è AVISO: O Client ID pode estar no formato incorreto.');
  console.log('   Deve terminar com .apps.googleusercontent.com\n');
}

// Teste de formato do Client Secret
if (clientSecret && !clientSecret.startsWith('GOCSPX-')) {
  console.log('‚ö†Ô∏è AVISO: O Client Secret pode estar no formato incorreto.');
  console.log('   Deve come√ßar com GOCSPX-\n');
}

