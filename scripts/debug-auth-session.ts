import 'dotenv/config';
import { supabase } from '../src/lib/supabaseClient';

async function debugAuthSession() {
  console.log('üîç Debugando sess√£o de autentica√ß√£o...\n');

  try {
    // 1. Verificar configura√ß√£o do cliente
    console.log('1Ô∏è‚É£ Configura√ß√£o do Cliente:');
    console.log('   URL:', supabase.supabaseUrl);
    console.log('   Anon Key:', supabase.supabaseKey?.substring(0, 20) + '...');

    // 2. Verificar sess√£o atual
    console.log('\n2Ô∏è‚É£ Verificando sess√£o atual:');
    const { data: sessionData, error: sessionError } = await supabase.auth.getSession();
    
    if (sessionError) {
      console.error('‚ùå Erro na sess√£o:', sessionError);
    } else {
      console.log('‚úÖ Sess√£o verificada');
      console.log('   Sess√£o ativa:', !!sessionData.session);
      if (sessionData.session) {
        console.log('   User ID:', sessionData.session.user.id);
        console.log('   Email:', sessionData.session.user.email);
      }
    }

    // 3. Verificar usu√°rio atual
    console.log('\n3Ô∏è‚É£ Verificando usu√°rio atual:');
    const { data: userData, error: userError } = await supabase.auth.getUser();
    
    if (userError) {
      console.error('‚ùå Erro ao obter usu√°rio:', userError);
      console.error('   C√≥digo:', userError.message);
    } else {
      console.log('‚úÖ Usu√°rio verificado');
      console.log('   User ID:', userData.user?.id);
      console.log('   Email:', userData.user?.email);
    }

    // 4. Testar signup
    console.log('\n4Ô∏è‚É£ Testando signup...');
    const testEmail = `teste-auth-${Date.now()}@exemplo.com`;
    const testPassword = '12345678';

    const { data: signupData, error: signupError } = await supabase.auth.signUp({
      email: testEmail,
      password: testPassword,
    });

    if (signupError) {
      console.error('‚ùå Erro no signup:', signupError);
    } else {
      console.log('‚úÖ Signup realizado');
      console.log('   User ID:', signupData.user?.id);
      console.log('   Email:', signupData.user?.email);
      console.log('   Session:', !!signupData.session);

      // 5. Verificar se o usu√°rio est√° dispon√≠vel imediatamente
      console.log('\n5Ô∏è‚É£ Verificando usu√°rio ap√≥s signup:');
      const { data: userData2, error: userError2 } = await supabase.auth.getUser();
      
      if (userError2) {
        console.error('‚ùå Erro ao obter usu√°rio ap√≥s signup:', userError2);
      } else {
        console.log('‚úÖ Usu√°rio dispon√≠vel ap√≥s signup');
        console.log('   User ID:', userData2.user?.id);
        console.log('   Email:', userData2.user?.email);
      }

      // 6. Testar inser√ß√£o de empresa
      if (signupData.user) {
        console.log('\n6Ô∏è‚É£ Testando inser√ß√£o de empresa...');
        const empresaData = {
          user_id: signupData.user.id,
          nome: 'Empresa Teste Auth',
          slug: `empresa-teste-auth-${Date.now()}`,
          google_connected: false,
          n8n_workflow_id: null,
          n8n_workflow_status: 'inactive',
        };

        const { data: insertData, error: insertError } = await supabase
          .from('empresas')
          .insert(empresaData)
          .select();

        if (insertError) {
          console.error('‚ùå Erro na inser√ß√£o:', insertError);
          console.error('   C√≥digo:', insertError.code);
          console.error('   Mensagem:', insertError.message);
          console.error('   Detalhes:', insertError.details);
          console.error('   Hint:', insertError.hint);
        } else {
          console.log('‚úÖ Empresa inserida com sucesso!');
          console.log('   Dados:', insertData);
        }
      }

      // 7. Limpar dados de teste
      console.log('\n7Ô∏è‚É£ Limpando dados de teste...');
      if (signupData.user) {
        // Tentar deletar empresa
        const { error: deleteError } = await supabase
          .from('empresas')
          .delete()
          .eq('user_id', signupData.user.id);

        if (deleteError) {
          console.error('‚ùå Erro ao deletar empresa:', deleteError);
        } else {
          console.log('‚úÖ Empresa de teste removida');
        }
      }
    }

    console.log('\nüéâ Debug conclu√≠do!');

  } catch (error) {
    console.error('‚ùå Erro durante o debug:', error);
  }
}

debugAuthSession().catch(console.error);
